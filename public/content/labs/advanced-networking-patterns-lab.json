{
  "id": "advanced-networking-patterns-lab",
  "title": "AWS Transit Gateway to Azure Virtual WAN: Advanced Networking Architecture Patterns",
  "difficulty": "expert",
  "estimated_time": "330 minutes",
  "aws_prerequisite": "Advanced experience with AWS Transit Gateway, Direct Connect, Route 53, Global Accelerator, CloudFront, and complex multi-region networking architectures",
  "azure_target": "Master Azure Virtual WAN, ExpressRoute, Traffic Manager, Front Door, and comprehensive global networking patterns with advanced security",
  "learning_objectives": [
    "Design sophisticated global networking architectures equivalent to AWS Transit Gateway",
    "Implement advanced connectivity patterns with Azure Virtual WAN and ExpressRoute",
    "Configure global traffic management with Azure Traffic Manager and Front Door",
    "Set up enterprise security with Azure Firewall and network segmentation",
    "Master hybrid networking with site-to-site and point-to-site VPN solutions",
    "Implement network monitoring, troubleshooting, and performance optimization",
    "Design disaster recovery networking with cross-region failover capabilities",
    "Configure advanced DNS resolution and content delivery networks"
  ],
  "aws_context": {
    "networking_services_mapping": {
      "transit_gateway": "Azure Virtual WAN",
      "direct_connect": "Azure ExpressRoute",
      "vpn_gateway": "Azure VPN Gateway", 
      "global_accelerator": "Azure Front Door + Traffic Manager",
      "cloudfront": "Azure CDN + Front Door",
      "route_53": "Azure DNS + Traffic Manager",
      "elb_alb_nlb": "Azure Load Balancer + Application Gateway",
      "nat_gateway": "Azure NAT Gateway",
      "privatelink": "Azure Private Link",
      "vpc_peering": "Virtual Network Peering"
    },
    "networking_patterns": {
      "hub_spoke_transit": "Traditional hub-spoke with Azure Firewall",
      "virtual_wan_any_to_any": "Fully meshed connectivity via Virtual WAN",
      "multi_region_global": "Global transit architecture with multiple hubs",
      "hybrid_connectivity": "On-premises integration via ExpressRoute",
      "internet_breakout": "Centralized vs distributed internet access",
      "secure_hybrid": "Zero trust network architecture"
    },
    "connectivity_scenarios": {
      "branch_to_branch": "Direct connectivity between branch offices",
      "branch_to_azure": "Branch office to Azure workloads",
      "azure_to_azure": "Cross-region Azure connectivity",
      "on_premises_to_azure": "Data center to cloud connectivity"
    }
  },
  "sections": [
    {
      "title": "Azure Virtual WAN Global Network Architecture",
      "content": "Design enterprise-scale global networking equivalent to AWS Transit Gateway with enhanced Azure Virtual WAN capabilities.",
      "virtual_wan_architecture": {
        "standard_virtual_wan": {
          "global_transit_network": "Any-to-any connectivity across regions and sites",
          "integrated_security": "Built-in Azure Firewall and security partner solutions",
          "optimized_routing": "Dynamic routing with Microsoft global network",
          "centralized_management": "Single pane of glass for global connectivity"
        },
        "hub_types": {
          "virtual_hub": "Cloud-only connectivity hub for VNet-to-VNet transit",
          "secured_hub": "Virtual hub with integrated Azure Firewall",
          "standard_hub": "Basic connectivity without advanced security features"
        },
        "connectivity_models": {
          "any_to_any": "Full mesh connectivity between all connected networks",
          "isolation": "Segmented connectivity with custom routing",
          "custom_routing": "Fine-grained control over traffic flows"
        }
      },
      "code_examples": {
        "create_virtual_wan_infrastructure": {
          "language": "bash",
          "title": "Create Global Virtual WAN Infrastructure",
          "code": "# Create comprehensive Azure Virtual WAN infrastructure\n\necho \"Creating Azure Virtual WAN global networking infrastructure...\"\n\n# Create resource group for networking\naz group create \\\n  --name global-networking-rg \\\n  --location eastus \\\n  --tags Environment=Production NetworkType=Global CostCenter=NET001\n\n# Create Virtual WAN\necho \"Creating Virtual WAN...\"\nVWAN_NAME=\"vwan-global-enterprise\"\naz network vwan create \\\n  --resource-group global-networking-rg \\\n  --name $VWAN_NAME \\\n  --location eastus \\\n  --type Standard \\\n  --allow-branch-to-branch-traffic true \\\n  --allow-vnet-to-vnet-traffic true \\\n  --disable-vpn-encryption false \\\n  --tags Environment=Production NetworkScope=Global\n\n# Create Virtual Hubs in multiple regions\necho \"Creating Virtual Hubs in multiple regions...\"\n\n# East US Hub (Primary)\naz network vhub create \\\n  --resource-group global-networking-rg \\\n  --name vhub-eastus \\\n  --vwan $VWAN_NAME \\\n  --location eastus \\\n  --address-prefix 10.0.0.0/23 \\\n  --sku Standard\n\n# West US 2 Hub (Secondary)\naz network vhub create \\\n  --resource-group global-networking-rg \\\n  --name vhub-westus2 \\\n  --vwan $VWAN_NAME \\\n  --location westus2 \\\n  --address-prefix 10.1.0.0/23 \\\n  --sku Standard\n\n# Europe West Hub (Global)\naz network vhub create \\\n  --resource-group global-networking-rg \\\n  --name vhub-westeurope \\\n  --vwan $VWAN_NAME \\\n  --location westeurope \\\n  --address-prefix 10.2.0.0/23 \\\n  --sku Standard\n\n# Wait for hubs to be created\necho \"Waiting for Virtual Hubs to be provisioned (this may take 30+ minutes)...\"\nfor hub in vhub-eastus vhub-westus2 vhub-westeurope; do\n  echo \"Waiting for $hub...\"\n  az network vhub wait \\\n    --resource-group global-networking-rg \\\n    --name $hub \\\n    --created \\\n    --timeout 3600\ndone\n\n# Create VPN Gateways in each hub for site-to-site connectivity\necho \"Creating VPN Gateways in Virtual Hubs...\"\n\n# East US VPN Gateway\naz network vpn-gateway create \\\n  --resource-group global-networking-rg \\\n  --name vpng-eastus \\\n  --location eastus \\\n  --vhub vhub-eastus \\\n  --scale-unit 2\n\n# West US 2 VPN Gateway  \naz network vpn-gateway create \\\n  --resource-group global-networking-rg \\\n  --name vpng-westus2 \\\n  --location westus2 \\\n  --vhub vhub-westus2 \\\n  --scale-unit 2\n\n# Europe West VPN Gateway\naz network vpn-gateway create \\\n  --resource-group global-networking-rg \\\n  --name vpng-westeurope \\\n  --location westeurope \\\n  --vhub vhub-westeurope \\\n  --scale-unit 2\n\n# Create ExpressRoute Gateways for premium connectivity\necho \"Creating ExpressRoute Gateways...\"\n\n# East US ExpressRoute Gateway\naz network express-route gateway create \\\n  --resource-group global-networking-rg \\\n  --name ergw-eastus \\\n  --location eastus \\\n  --virtual-hub vhub-eastus \\\n  --scale-units 2\n\n# West US 2 ExpressRoute Gateway\naz network express-route gateway create \\\n  --resource-group global-networking-rg \\\n  --name ergw-westus2 \\\n  --location westus2 \\\n  --virtual-hub vhub-westus2 \\\n  --scale-units 2\n\necho \"Virtual WAN infrastructure created successfully.\"\necho \"Virtual WAN: $VWAN_NAME\"\necho \"Virtual Hubs: vhub-eastus, vhub-westus2, vhub-westeurope\"\necho \"\\nNote: Hub provisioning continues in background and may take up to 30 minutes.\""
        },
        "create_spoke_vnets": {
          "language": "bash",
          "title": "Create Spoke Virtual Networks and Connections",
          "code": "# Create spoke virtual networks and connect them to Virtual WAN hubs\n\necho \"Creating spoke virtual networks...\"\n\n# East US Production VNet\necho \"Creating East US Production VNet...\"\naz network vnet create \\\n  --resource-group global-networking-rg \\\n  --name vnet-eastus-production \\\n  --location eastus \\\n  --address-prefixes 10.10.0.0/16 \\\n  --subnet-name app-subnet \\\n  --subnet-prefixes 10.10.1.0/24\n\n# Add additional subnets to production VNet\naz network vnet subnet create \\\n  --resource-group global-networking-rg \\\n  --vnet-name vnet-eastus-production \\\n  --name data-subnet \\\n  --address-prefixes 10.10.2.0/24\n\naz network vnet subnet create \\\n  --resource-group global-networking-rg \\\n  --vnet-name vnet-eastus-production \\\n  --name management-subnet \\\n  --address-prefixes 10.10.3.0/24\n\n# West US 2 Development VNet\necho \"Creating West US 2 Development VNet...\"\naz network vnet create \\\n  --resource-group global-networking-rg \\\n  --name vnet-westus2-development \\\n  --location westus2 \\\n  --address-prefixes 10.20.0.0/16 \\\n  --subnet-name dev-subnet \\\n  --subnet-prefixes 10.20.1.0/24\n\naz network vnet subnet create \\\n  --resource-group global-networking-rg \\\n  --vnet-name vnet-westus2-development \\\n  --name test-subnet \\\n  --address-prefixes 10.20.2.0/24\n\n# Europe West Shared Services VNet\necho \"Creating Europe West Shared Services VNet...\"\naz network vnet create \\\n  --resource-group global-networking-rg \\\n  --name vnet-westeurope-shared \\\n  --location westeurope \\\n  --address-prefixes 10.30.0.0/16 \\\n  --subnet-name shared-subnet \\\n  --subnet-prefixes 10.30.1.0/24\n\naz network vnet subnet create \\\n  --resource-group global-networking-rg \\\n  --vnet-name vnet-westeurope-shared \\\n  --name security-subnet \\\n  --address-prefixes 10.30.2.0/24\n\n# Create VNet connections to Virtual WAN hubs\necho \"Creating VNet connections to Virtual WAN hubs...\"\n\n# Connect East US Production VNet to East US Hub\naz network vhub connection create \\\n  --resource-group global-networking-rg \\\n  --vhub-name vhub-eastus \\\n  --name connection-eastus-production \\\n  --remote-vnet $(az network vnet show --resource-group global-networking-rg --name vnet-eastus-production --query id -o tsv) \\\n  --enable-internet-security true\n\n# Connect West US 2 Development VNet to West US 2 Hub\naz network vhub connection create \\\n  --resource-group global-networking-rg \\\n  --vhub-name vhub-westus2 \\\n  --name connection-westus2-development \\\n  --remote-vnet $(az network vnet show --resource-group global-networking-rg --name vnet-westus2-development --query id -o tsv) \\\n  --enable-internet-security true\n\n# Connect Europe West Shared Services VNet to Europe West Hub\naz network vhub connection create \\\n  --resource-group global-networking-rg \\\n  --vhub-name vhub-westeurope \\\n  --name connection-westeurope-shared \\\n  --remote-vnet $(az network vnet show --resource-group global-networking-rg --name vnet-westeurope-shared --query id -o tsv) \\\n  --enable-internet-security true\n\n# Create additional spoke VNets for demonstration of complex routing\necho \"Creating additional spoke VNets...\"\n\n# East US DMZ VNet (for security services)\naz network vnet create \\\n  --resource-group global-networking-rg \\\n  --name vnet-eastus-dmz \\\n  --location eastus \\\n  --address-prefixes 10.11.0.0/16 \\\n  --subnet-name AzureFirewallSubnet \\\n  --subnet-prefixes 10.11.1.0/26\n\naz network vnet subnet create \\\n  --resource-group global-networking-rg \\\n  --vnet-name vnet-eastus-dmz \\\n  --name security-services-subnet \\\n  --address-prefixes 10.11.2.0/24\n\n# Connect DMZ VNet to hub with custom routing\naz network vhub connection create \\\n  --resource-group global-networking-rg \\\n  --vhub-name vhub-eastus \\\n  --name connection-eastus-dmz \\\n  --remote-vnet $(az network vnet show --resource-group global-networking-rg --name vnet-eastus-dmz --query id -o tsv) \\\n  --enable-internet-security false \\\n  --propagated-route-tables /subscriptions/$(az account show --query id -o tsv)/resourceGroups/global-networking-rg/providers/Microsoft.Network/virtualHubs/vhub-eastus/hubRouteTables/defaultRouteTable \\\n  --labels default\n\necho \"Spoke VNets and connections created successfully.\"\necho \"\\nVNet Connections:\"\naz network vhub connection list \\\n  --resource-group global-networking-rg \\\n  --vhub-name vhub-eastus \\\n  --query '[].{Name:name, VNet:remoteVirtualNetwork.id, Status:connectionStatus}' \\\n  --output table"
        },
        "configure_azure_firewall": {
          "language": "bash",
          "title": "Configure Azure Firewall in Secured Virtual Hubs",
          "code": "# Configure Azure Firewall in Virtual WAN hubs for advanced security\n\necho \"Configuring Azure Firewall in Virtual WAN hubs...\"\n\n# Create Azure Firewall Policy\necho \"Creating Azure Firewall Policy...\"\nFW_POLICY_NAME=\"fw-policy-global\"\naz network firewall policy create \\\n  --resource-group global-networking-rg \\\n  --name $FW_POLICY_NAME \\\n  --location eastus \\\n  --sku Premium \\\n  --threat-intel-mode Alert \\\n  --enable-dns-proxy true \\\n  --tags Environment=Production SecurityLevel=Premium\n\n# Create rule collection groups\necho \"Creating firewall rule collection groups...\"\n\n# Network rule collection group\naz network firewall policy rule-collection-group create \\\n  --resource-group global-networking-rg \\\n  --policy-name $FW_POLICY_NAME \\\n  --name network-rules \\\n  --priority 1000\n\n# Application rule collection group  \naz network firewall policy rule-collection-group create \\\n  --resource-group global-networking-rg \\\n  --policy-name $FW_POLICY_NAME \\\n  --name application-rules \\\n  --priority 2000\n\n# Create comprehensive network rules\necho \"Creating network firewall rules...\"\ncat > network-rules.json << 'EOF'\n{\n  \"ruleCollections\": [\n    {\n      \"name\": \"allow-internal-traffic\",\n      \"priority\": 1100,\n      \"ruleCollectionType\": \"FirewallPolicyFilterRuleCollection\",\n      \"action\": {\n        \"type\": \"Allow\"\n      },\n      \"rules\": [\n        {\n          \"ruleType\": \"NetworkRule\",\n          \"name\": \"allow-vnet-to-vnet\",\n          \"ipProtocols\": [\"TCP\", \"UDP\", \"ICMP\"],\n          \"sourceAddresses\": [\"10.10.0.0/16\", \"10.20.0.0/16\", \"10.30.0.0/16\"],\n          \"destinationAddresses\": [\"10.10.0.0/16\", \"10.20.0.0/16\", \"10.30.0.0/16\"],\n          \"destinationPorts\": [\"*\"]\n        },\n        {\n          \"ruleType\": \"NetworkRule\",\n          \"name\": \"allow-dns\",\n          \"ipProtocols\": [\"TCP\", \"UDP\"],\n          \"sourceAddresses\": [\"*\"],\n          \"destinationAddresses\": [\"168.63.129.16\", \"8.8.8.8\", \"8.8.4.4\"],\n          \"destinationPorts\": [\"53\"]\n        },\n        {\n          \"ruleType\": \"NetworkRule\",\n          \"name\": \"allow-ntp\",\n          \"ipProtocols\": [\"UDP\"],\n          \"sourceAddresses\": [\"*\"],\n          \"destinationAddresses\": [\"*\"],\n          \"destinationPorts\": [\"123\"]\n        }\n      ]\n    },\n    {\n      \"name\": \"deny-high-risk-traffic\",\n      \"priority\": 1200,\n      \"ruleCollectionType\": \"FirewallPolicyFilterRuleCollection\",\n      \"action\": {\n        \"type\": \"Deny\"\n      },\n      \"rules\": [\n        {\n          \"ruleType\": \"NetworkRule\",\n          \"name\": \"deny-p2p-protocols\",\n          \"ipProtocols\": [\"TCP\", \"UDP\"],\n          \"sourceAddresses\": [\"*\"],\n          \"destinationAddresses\": [\"*\"],\n          \"destinationPorts\": [\"6881-6889\", \"6969\", \"51413\"]\n        },\n        {\n          \"ruleType\": \"NetworkRule\",\n          \"name\": \"deny-remote-access-protocols\",\n          \"ipProtocols\": [\"TCP\"],\n          \"sourceAddresses\": [\"*\"],\n          \"destinationAddresses\": [\"*\"],\n          \"destinationPorts\": [\"23\", \"135\", \"139\", \"445\", \"1433\", \"3389\"]\n        }\n      ]\n    }\n  ]\n}\nEOF\n\n# Apply network rules to the rule collection group\naz network firewall policy rule-collection-group collection add-filter-collection \\\n  --resource-group global-networking-rg \\\n  --policy-name $FW_POLICY_NAME \\\n  --rule-collection-group-name network-rules \\\n  --name allow-internal-traffic \\\n  --collection-priority 1100 \\\n  --action Allow \\\n  --rule-name allow-vnet-to-vnet \\\n  --rule-type NetworkRule \\\n  --description \"Allow communication between VNets\" \\\n  --destination-addresses \"10.10.0.0/16\" \"10.20.0.0/16\" \"10.30.0.0/16\" \\\n  --source-addresses \"10.10.0.0/16\" \"10.20.0.0/16\" \"10.30.0.0/16\" \\\n  --ip-protocols TCP UDP ICMP \\\n  --destination-ports \"*\"\n\n# Create application rules for web traffic\necho \"Creating application firewall rules...\"\naz network firewall policy rule-collection-group collection add-filter-collection \\\n  --resource-group global-networking-rg \\\n  --policy-name $FW_POLICY_NAME \\\n  --rule-collection-group-name application-rules \\\n  --name allow-web-traffic \\\n  --collection-priority 2100 \\\n  --action Allow \\\n  --rule-name allow-https-traffic \\\n  --rule-type ApplicationRule \\\n  --description \"Allow HTTPS traffic to approved domains\" \\\n  --source-addresses \"*\" \\\n  --protocols Https=443 Http=80 \\\n  --target-fqdns \"*.microsoft.com\" \"*.azure.com\" \"*.windows.net\" \"*.ubuntu.com\" \"*.docker.com\"\n\n# Deploy Azure Firewall to East US hub\necho \"Deploying Azure Firewall to East US Virtual Hub...\"\naz network firewall create \\\n  --resource-group global-networking-rg \\\n  --name fw-eastus-hub \\\n  --location eastus \\\n  --vhub vhub-eastus \\\n  --firewall-policy $FW_POLICY_NAME \\\n  --sku AZFW_Hub \\\n  --tier Premium \\\n  --public-ip-count 2\n\n# Deploy Azure Firewall to West US 2 hub\necho \"Deploying Azure Firewall to West US 2 Virtual Hub...\"\naz network firewall create \\\n  --resource-group global-networking-rg \\\n  --name fw-westus2-hub \\\n  --location westus2 \\\n  --vhub vhub-westus2 \\\n  --firewall-policy $FW_POLICY_NAME \\\n  --sku AZFW_Hub \\\n  --tier Premium \\\n  --public-ip-count 2\n\necho \"Azure Firewall configuration completed successfully.\"\necho \"Firewall Policy: $FW_POLICY_NAME\"\necho \"\\nFirewalls deployed:\"\naz network firewall list \\\n  --resource-group global-networking-rg \\\n  --query '[].{Name:name, Location:location, Tier:sku.tier, State:provisioningState}' \\\n  --output table"
        },
        \"setup_global_connectivity\": {\n          \"language\": \"bash\",\n          \"title\": \"Setup Global Connectivity and Traffic Management\",\n          \"code\": \"# Setup global connectivity with ExpressRoute, Traffic Manager, and Front Door\\n\\necho \\\"Setting up global connectivity and traffic management...\\\"\\n\\n# Create ExpressRoute circuit simulation (for demonstration)\\necho \\\"Creating ExpressRoute circuit configuration...\\\"\\ncat > expressroute-config.json << 'EOF'\\n{\\n  \\\"circuitName\\\": \\\"er-circuit-primary\\\",\\n  \\\"serviceProvider\\\": \\\"Equinix\\\",\\n  \\\"peeringLocation\\\": \\\"Washington DC\\\",\\n  \\\"bandwidth\\\": 1000,\\n  \\\"sku\\\": {\\n    \\\"tier\\\": \\\"Premium\\\",\\n    \\\"family\\\": \\\"MeteredData\\\"\\n  },\\n  \\\"peerings\\\": [\\n    {\\n      \\\"peeringType\\\": \\\"AzurePrivatePeering\\\",\\n      \\\"peerASN\\\": 65000,\\n      \\\"primaryPeerAddressPrefix\\\": \\\"192.168.1.0/30\\\",\\n      \\\"secondaryPeerAddressPrefix\\\": \\\"192.168.1.4/30\\\",\\n      \\\"vlanId\\\": 100\\n    }\\n  ]\\n}\\nEOF\\n\\n# Note: Actual ExpressRoute circuit creation requires service provider coordination\\necho \\\"Note: ExpressRoute circuit creation requires coordination with service provider\\\"\\n\\n# Create Traffic Manager profile for global load balancing\\necho \\\"Creating Traffic Manager profile...\\\"\\nTRAFFIC_MANAGER_NAME=\\\"tm-global-apps-$(openssl rand -hex 3)\\\"\\naz network traffic-manager profile create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name $TRAFFIC_MANAGER_NAME \\\\\\n  --routing-method Performance \\\\\\n  --unique-dns-name $TRAFFIC_MANAGER_NAME \\\\\\n  --ttl 30 \\\\\\n  --protocol HTTPS \\\\\\n  --port 443 \\\\\\n  --path \\\"/health\\\" \\\\\\n  --interval 10 \\\\\\n  --timeout 5 \\\\\\n  --max-failures 3\\n\\n# Create public IP addresses for application endpoints\\necho \\\"Creating public IP addresses for global endpoints...\\\"\\n\\n# East US endpoint\\naz network public-ip create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name pip-app-eastus \\\\\\n  --location eastus \\\\\\n  --sku Standard \\\\\\n  --allocation-method Static \\\\\\n  --dns-name app-eastus-$(openssl rand -hex 3)\\n\\n# West US 2 endpoint\\naz network public-ip create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name pip-app-westus2 \\\\\\n  --location westus2 \\\\\\n  --sku Standard \\\\\\n  --allocation-method Static \\\\\\n  --dns-name app-westus2-$(openssl rand -hex 3)\\n\\n# Europe West endpoint\\naz network public-ip create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name pip-app-westeurope \\\\\\n  --location westeurope \\\\\\n  --sku Standard \\\\\\n  --allocation-method Static \\\\\\n  --dns-name app-westeurope-$(openssl rand -hex 3)\\n\\n# Add Traffic Manager endpoints\\necho \\\"Adding Traffic Manager endpoints...\\\"\\n\\n# East US endpoint\\naz network traffic-manager endpoint create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --profile-name $TRAFFIC_MANAGER_NAME \\\\\\n  --name endpoint-eastus \\\\\\n  --type externalEndpoints \\\\\\n  --target $(az network public-ip show --resource-group global-networking-rg --name pip-app-eastus --query dnsSettings.fqdn -o tsv) \\\\\\n  --endpoint-location eastus \\\\\\n  --priority 1 \\\\\\n  --weight 100\\n\\n# West US 2 endpoint\\naz network traffic-manager endpoint create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --profile-name $TRAFFIC_MANAGER_NAME \\\\\\n  --name endpoint-westus2 \\\\\\n  --type externalEndpoints \\\\\\n  --target $(az network public-ip show --resource-group global-networking-rg --name pip-app-westus2 --query dnsSettings.fqdn -o tsv) \\\\\\n  --endpoint-location westus2 \\\\\\n  --priority 2 \\\\\\n  --weight 100\\n\\n# Europe West endpoint\\naz network traffic-manager endpoint create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --profile-name $TRAFFIC_MANAGER_NAME \\\\\\n  --name endpoint-westeurope \\\\\\n  --type externalEndpoints \\\\\\n  --target $(az network public-ip show --resource-group global-networking-rg --name pip-app-westeurope --query dnsSettings.fqdn -o tsv) \\\\\\n  --endpoint-location westeurope \\\\\\n  --priority 3 \\\\\\n  --weight 100\\n\\n# Create Azure Front Door profile for advanced global load balancing\\necho \\\"Creating Azure Front Door profile...\\\"\\nFRONT_DOOR_NAME=\\\"fd-global-apps-$(openssl rand -hex 3)\\\"\\naz network front-door create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name $FRONT_DOOR_NAME \\\\\\n  --accepted-protocols Http Https \\\\\\n  --protocol Https \\\\\\n  --interval 5 \\\\\\n  --probe-method HEAD \\\\\\n  --path \\\"/health\\\" \\\\\\n  --forwarding-protocol MatchRequest \\\\\\n  --caching Enabled\\n\\n# Add backend pools to Front Door\\necho \\\"Adding backend pools to Front Door...\\\"\\n\\n# Primary backend pool\\naz network front-door backend-pool create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --front-door-name $FRONT_DOOR_NAME \\\\\\n  --name primary-backend-pool \\\\\\n  --address $(az network public-ip show --resource-group global-networking-rg --name pip-app-eastus --query ipAddress -o tsv) \\\\\\n  --host-header $(az network public-ip show --resource-group global-networking-rg --name pip-app-eastus --query dnsSettings.fqdn -o tsv) \\\\\\n  --http-port 80 \\\\\\n  --https-port 443 \\\\\\n  --priority 1 \\\\\\n  --weight 100\\n\\n# Add secondary backends\\naz network front-door backend-pool backend add \\\\\\n  --resource-group global-networking-rg \\\\\\n  --front-door-name $FRONT_DOOR_NAME \\\\\\n  --pool-name primary-backend-pool \\\\\\n  --address $(az network public-ip show --resource-group global-networking-rg --name pip-app-westus2 --query ipAddress -o tsv) \\\\\\n  --host-header $(az network public-ip show --resource-group global-networking-rg --name pip-app-westus2 --query dnsSettings.fqdn -o tsv) \\\\\\n  --http-port 80 \\\\\\n  --https-port 443 \\\\\\n  --priority 2 \\\\\\n  --weight 50\\n\\naz network front-door backend-pool backend add \\\\\\n  --resource-group global-networking-rg \\\\\\n  --front-door-name $FRONT_DOOR_NAME \\\\\\n  --pool-name primary-backend-pool \\\\\\n  --address $(az network public-ip show --resource-group global-networking-rg --name pip-app-westeurope --query ipAddress -o tsv) \\\\\\n  --host-header $(az network public-ip show --resource-group global-networking-rg --name pip-app-westeurope --query dnsSettings.fqdn -o tsv) \\\\\\n  --http-port 80 \\\\\\n  --https-port 443 \\\\\\n  --priority 3 \\\\\\n  --weight 25\\n\\n# Create Azure DNS zone for custom domain\\necho \\\"Creating Azure DNS zone...\\\"\\nDNS_ZONE_NAME=\\\"example-corp.com\\\"\\naz network dns zone create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name $DNS_ZONE_NAME\\n\\n# Add DNS records for global services\\necho \\\"Adding DNS records...\\\"\\n\\n# Add CNAME record for Traffic Manager\\naz network dns record-set cname set-record \\\\\\n  --resource-group global-networking-rg \\\\\\n  --zone-name $DNS_ZONE_NAME \\\\\\n  --record-set-name app-tm \\\\\\n  --cname $(az network traffic-manager profile show --resource-group global-networking-rg --name $TRAFFIC_MANAGER_NAME --query dnsConfig.fqdn -o tsv)\\n\\n# Add CNAME record for Front Door\\naz network dns record-set cname set-record \\\\\\n  --resource-group global-networking-rg \\\\\\n  --zone-name $DNS_ZONE_NAME \\\\\\n  --record-set-name app-fd \\\\\\n  --cname $(az network front-door show --resource-group global-networking-rg --name $FRONT_DOOR_NAME --query cName -o tsv)\\n\\necho \\\"Global connectivity setup completed successfully.\\\"\\necho \\\"Traffic Manager Profile: $TRAFFIC_MANAGER_NAME\\\"\\necho \\\"Front Door Profile: $FRONT_DOOR_NAME\\\"\\necho \\\"DNS Zone: $DNS_ZONE_NAME\\\"\\necho \\\"\\nTraffic Manager FQDN: $(az network traffic-manager profile show --resource-group global-networking-rg --name $TRAFFIC_MANAGER_NAME --query dnsConfig.fqdn -o tsv)\\\"\\necho \\\"Front Door FQDN: $(az network front-door show --resource-group global-networking-rg --name $FRONT_DOOR_NAME --query cName -o tsv)\\\"\"\n        }\n      }\n    },\n    {\n      \"title\": \"Advanced Network Monitoring and Troubleshooting\",\n      \"content\": \"Implement comprehensive network monitoring, diagnostics, and performance optimization equivalent to AWS networking monitoring capabilities.\",\n      \"code_examples\": {\n        \"setup_network_monitoring\": {\n          \"language\": \"bash\",\n          \"title\": \"Setup Advanced Network Monitoring and Diagnostics\",\n          \"code\": \"# Setup comprehensive network monitoring and diagnostics\\n\\necho \\\"Setting up advanced network monitoring...\\\"\\n\\n# Create Log Analytics workspace for network monitoring\\necho \\\"Creating Log Analytics workspace...\\\"\\naz monitor log-analytics workspace create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --workspace-name network-monitoring-workspace \\\\\\n  --location eastus \\\\\\n  --sku pergb2018\\n\\nNETWORK_WORKSPACE_ID=$(az monitor log-analytics workspace show \\\\\\n  --resource-group global-networking-rg \\\\\\n  --workspace-name network-monitoring-workspace \\\\\\n  --query customerId -o tsv)\\n\\n# Enable Network Watcher in all regions\\necho \\\"Enabling Network Watcher...\\\"\\nfor region in eastus westus2 westeurope; do\\n  az network watcher configure \\\\\\n    --resource-group NetworkWatcherRG \\\\\\n    --location $region \\\\\\n    --enabled true\\ndone\\n\\n# Create storage account for network monitoring data\\necho \\\"Creating storage account for network monitoring...\\\"\\nNETMON_STORAGE_NAME=\\\"netmon$(openssl rand -hex 3)\\\"\\naz storage account create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name $NETMON_STORAGE_NAME \\\\\\n  --location eastus \\\\\\n  --sku Standard_LRS \\\\\\n  --kind StorageV2\\n\\n# Enable NSG flow logs for key network security groups\\necho \\\"Configuring NSG flow logs...\\\"\\n\\n# Create NSG for monitoring\\naz network nsg create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name nsg-monitoring \\\\\\n  --location eastus\\n\\n# Configure NSG flow logs\\naz network watcher flow-log create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name flowlog-nsg-monitoring \\\\\\n  --nsg $(az network nsg show --resource-group global-networking-rg --name nsg-monitoring --query id -o tsv) \\\\\\n  --storage-account $NETMON_STORAGE_NAME \\\\\\n  --enabled true \\\\\\n  --retention 30 \\\\\\n  --log-analytics-workspace $NETWORK_WORKSPACE_ID \\\\\\n  --interval 10\\n\\n# Create Connection Monitor for end-to-end connectivity testing\\necho \\\"Creating Connection Monitor...\\\"\\n\\n# Create test VM for connection monitoring\\naz vm create \\\\\\n  --resource-group global-networking-rg \\\\\\n  --name vm-connection-test \\\\\\n  --image Ubuntu2204 \\\\\\n  --size Standard_B2s \\\\\\n  --vnet-name vnet-eastus-production \\\\\\n  --subnet app-subnet \\\\\\n  --admin-username azureuser \\\\\\n  --generate-ssh-keys \\\\\\n  --nsg nsg-monitoring\\n\\n# Install Network Watcher extension\\naz vm extension set \\\\\\n  --resource-group global-networking-rg \\\\\\n  --vm-name vm-connection-test \\\\\\n  --name NetworkWatcherAgentLinux \\\\\\n  --publisher Microsoft.Azure.NetworkWatcher\\n\\n# Create connection monitor configuration\\ncat > connection-monitor-config.json << 'EOF'\\n{\\n  \\\"properties\\\": {\\n    \\\"endpoints\\\": [\\n      {\\n        \\\"name\\\": \\\"source-vm\\\",\\n        \\\"type\\\": \\\"AzureVM\\\",\\n        \\\"resourceId\\\": \\\"/subscriptions/SUBSCRIPTION_ID/resourceGroups/global-networking-rg/providers/Microsoft.Compute/virtualMachines/vm-connection-test\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"bing-endpoint\\\",\\n        \\\"type\\\": \\\"ExternalAddress\\\",\\n        \\\"address\\\": \\\"bing.com\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"azure-portal\\\",\\n        \\\"type\\\": \\\"ExternalAddress\\\",\\n        \\\"address\\\": \\\"portal.azure.com\\\"\\n      }\\n    ],\\n    \\\"testConfigurations\\\": [\\n      {\\n        \\\"name\\\": \\\"http-test\\\",\\n        \\\"testFrequencySec\\\": 60,\\n        \\\"protocol\\\": \\\"HTTP\\\",\\n        \\\"httpConfiguration\\\": {\\n          \\\"port\\\": 80,\\n          \\\"method\\\": \\\"GET\\\",\\n          \\\"requestHeaders\\\": [],\\n          \\\"validStatusCodeRanges\\\": [\\\"200-299\\\"]\\n        },\\n        \\\"successThreshold\\\": {\\n          \\\"checksFailedPercent\\\": 5,\\n          \\\"roundTripTimeMs\\\": 500\\n        }\\n      },\\n      {\\n        \\\"name\\\": \\\"https-test\\\",\\n        \\\"testFrequencySec\\\": 60,\\n        \\\"protocol\\\": \\\"HTTP\\\",\\n        \\\"httpConfiguration\\\": {\\n          \\\"port\\\": 443,\\n          \\\"method\\\": \\\"GET\\\",\\n          \\\"requestHeaders\\\": [],\\n          \\\"validStatusCodeRanges\\\": [\\\"200-299\\\"],\\n          \\\"preferHTTPS\\\": true\\n        },\\n        \\\"successThreshold\\\": {\\n          \\\"checksFailedPercent\\\": 5,\\n          \\\"roundTripTimeMs\\\": 1000\\n        }\\n      }\\n    ],\\n    \\\"testGroups\\\": [\\n      {\\n        \\\"name\\\": \\\"internet-connectivity-test\\\",\\n        \\\"sources\\\": [\\\"source-vm\\\"],\\n        \\\"destinations\\\": [\\\"bing-endpoint\\\", \\\"azure-portal\\\"],\\n        \\\"testConfigurations\\\": [\\\"http-test\\\", \\\"https-test\\\"]\\n      }\\n    ],\\n    \\\"outputs\\\": [\\n      {\\n        \\\"type\\\": \\\"Workspace\\\",\\n        \\\"workspaceSettings\\\": {\\n          \\\"workspaceResourceId\\\": \\\"/subscriptions/SUBSCRIPTION_ID/resourceGroups/global-networking-rg/providers/Microsoft.OperationalInsights/workspaces/network-monitoring-workspace\\\"\\n        }\\n      }\\n    ]\\n  }\\n}\\nEOF\\n\\n# Replace subscription ID\\nsed -i \\\"s/SUBSCRIPTION_ID/$(az account show --query id -o tsv)/g\\\" connection-monitor-config.json\\n\\n# Create network performance monitoring alerts\\necho \\\"Creating network performance alerts...\\\"\\n\\n# High latency alert for Virtual WAN\\naz monitor metrics alert create \\\\\\n  --name \\\"VirtualWAN-High-Latency\\\" \\\\\\n  --resource-group global-networking-rg \\\\\\n  --scopes $(az network vwan show --resource-group global-networking-rg --name $VWAN_NAME --query id -o tsv) \\\\\\n  --condition \\\"avg ExpressRouteGatewayPacketsPerSecond > 1000\\\" \\\\\\n  --window-size 5m \\\\\\n  --evaluation-frequency 1m \\\\\\n  --severity 2 \\\\\\n  --description \\\"Virtual WAN experiencing high packet rate\\\"\\n\\n# Azure Firewall threat detection alert\\naz monitor metrics alert create \\\\\\n  --name \\\"Firewall-Threat-Detection\\\" \\\\\\n  --resource-group global-networking-rg \\\\\\n  --scopes $(az network firewall show --resource-group global-networking-rg --name fw-eastus-hub --query id -o tsv) \\\\\\n  --condition \\\"total FirewallHealth < 95\\\" \\\\\\n  --window-size 5m \\\\\\n  --evaluation-frequency 1m \\\\\\n  --severity 1 \\\\\\n  --description \\\"Azure Firewall health degraded\\\"\\n\\n# Traffic Manager endpoint health alert\\naz monitor metrics alert create \\\\\\n  --name \\\"TrafficManager-Endpoint-Down\\\" \\\\\\n  --resource-group global-networking-rg \\\\\\n  --scopes $(az network traffic-manager profile show --resource-group global-networking-rg --name $TRAFFIC_MANAGER_NAME --query id -o tsv) \\\\\\n  --condition \\\"avg EndpointStatus < 1\\\" \\\\\\n  --window-size 5m \\\\\\n  --evaluation-frequency 1m \\\\\\n  --severity 1 \\\\\\n  --description \\\"Traffic Manager endpoint is down\\\"\\n\\n# Create Log Analytics queries for network analysis\\necho \\\"Creating network analysis queries...\\\"\\ncat > network-analysis-queries.kql << 'EOF'\\n// Network Analysis Queries for Azure Virtual WAN and Global Networking\\n\\n// 1. Virtual WAN hub connectivity health\\nAzureDiagnostics\\n| where Category == \\\"RoutingLogs\\\"\\n| where TimeGenerated > ago(1h)\\n| summarize Count = count() by ResourceId, Level\\n| order by Count desc\\n\\n// 2. Azure Firewall threat detection\\nAzureDiagnostics\\n| where Category == \\\"AzureFirewallApplicationRule\\\" or Category == \\\"AzureFirewallNetworkRule\\\"\\n| where Action == \\\"Deny\\\"\\n| where TimeGenerated > ago(24h)\\n| summarize ThreatCount = count() by SourceIP, TargetURL, Action\\n| order by ThreatCount desc\\n| take 20\\n\\n// 3. Traffic Manager endpoint performance\\nAzureDiagnostics\\n| where ResourceProvider == \\\"MICROSOFT.NETWORK\\\" and ResourceType == \\\"TRAFFICMANAGERPROFILES\\\"\\n| where TimeGenerated > ago(4h)\\n| summarize AvgLatency = avg(todouble(Latency_d)) by EndpointName_s, bin(TimeGenerated, 15m)\\n| render timechart\\n\\n// 4. NSG flow log analysis for security insights\\nAzureNetworkAnalytics_CL\\n| where FlowType_s == \\\"S2S\\\" and FlowStatus_s == \\\"A\\\"\\n| where TimeGenerated > ago(2h)\\n| summarize FlowCount = count(), TotalBytes = sum(OutBytes_d + InBytes_d) by SrcIP_s, DestIP_s, DestPort_d\\n| where FlowCount > 100\\n| order by TotalBytes desc\\n| take 15\\n\\n// 5. Front Door backend health and performance\\nAzureDiagnostics\\n| where Category == \\\"FrontdoorAccessLog\\\"\\n| where TimeGenerated > ago(2h)\\n| summarize \\n    RequestCount = count(), \\n    AvgTimeTaken = avg(TimeTaken_d),\\n    ErrorRate = 100.0 * countif(HttpStatusCode_d >= 400) / count()\\n    by BackendHostname_s, bin(TimeGenerated, 10m)\\n| render timechart\\n\\n// 6. ExpressRoute circuit utilization\\nAzureMetrics\\n| where ResourceProvider == \\\"MICROSOFT.NETWORK\\\" and ResourceType == \\\"EXPRESSROUTECIRCUITS\\\"\\n| where MetricName == \\\"BitsInPerSecond\\\" or MetricName == \\\"BitsOutPerSecond\\\"\\n| where TimeGenerated > ago(4h)\\n| summarize AvgUtilization = avg(Average) by MetricName, bin(TimeGenerated, 15m)\\n| render timechart\\n\\n// 7. Virtual network peering connection analysis\\nAzureDiagnostics\\n| where Category == \\\"VMProtectionAlerts\\\"\\n| where TimeGenerated > ago(1d)\\n| summarize AlertCount = count() by Level, AlertType_s\\n| order by AlertCount desc\\nEOF\\n\\necho \\\"Network monitoring setup completed successfully.\\\"\\necho \\\"Log Analytics Workspace: network-monitoring-workspace\\\"\\necho \\\"Storage Account: $NETMON_STORAGE_NAME\\\"\\necho \\\"\\nMonitoring alerts created:\\\"\\naz monitor metrics alert list --resource-group global-networking-rg --query '[].{Name:name, Condition:criteria.allOf[0].criterionType, Severity:severity}' --output table\"\n        }\n      }\n    }\n  ],\n  \"hands_on_exercise\": {\n    \"scenario\": \"Deploy enterprise-scale global networking architecture with advanced security and monitoring\",\n    \"requirements\": [\n      \"Create Azure Virtual WAN with multiple regional hubs and secured connectivity\",\n      \"Deploy spoke virtual networks with complex routing and security policies\",\n      \"Configure Azure Firewall with comprehensive rule sets and threat intelligence\",\n      \"Set up global traffic management with Traffic Manager and Front Door\",\n      \"Implement advanced network monitoring with flow logs and connection monitoring\",\n      \"Configure ExpressRoute connectivity simulation and hybrid networking\",\n      \"Create network performance optimization and cost management strategies\",\n      \"Establish network security compliance and governance frameworks\"\n    ],\n    \"validation_steps\": [\n      {\n        \"step\": \"Verify Virtual WAN creation\",\n        \"command\": \"az network vwan show --resource-group global-networking-rg --name $VWAN_NAME --query 'provisioningState'\",\n        \"expected\": \"Should return 'Succeeded'\"\n      },\n      {\n        \"step\": \"Check Virtual Hubs deployment\",\n        \"command\": \"az network vhub list --resource-group global-networking-rg --query 'length(@)'\",\n        \"expected\": \"Should return count of virtual hubs (3)\"\n      },\n      {\n        \"step\": \"Verify VNet connections\",\n        \"command\": \"az network vhub connection list --resource-group global-networking-rg --vhub-name vhub-eastus --query 'length(@)'\",\n        \"expected\": \"Should return count of VNet connections (minimum 2)\"\n      },\n      {\n        \"step\": \"Check Azure Firewall deployment\",\n        \"command\": \"az network firewall list --resource-group global-networking-rg --query 'length(@)'\",\n        \"expected\": \"Should return count of firewalls (minimum 2)\"\n      },\n      {\n        \"step\": \"Verify Traffic Manager profile\",\n        \"command\": \"az network traffic-manager profile show --resource-group global-networking-rg --name $TRAFFIC_MANAGER_NAME --query 'profileStatus'\",\n        \"expected\": \"Should return 'Enabled'\"\n      },\n      {\n        \"step\": \"Check Front Door deployment\",\n        \"command\": \"az network front-door show --resource-group global-networking-rg --name $FRONT_DOOR_NAME --query 'provisioningState'\",\n        \"expected\": \"Should return 'Succeeded'\"\n      }\n    ]\n  },\n  \"networking_patterns_comparison\": {\n    \"transit_gateway_vs_virtual_wan\": {\n      \"connectivity_model\": {\n        \"aws_transit_gateway\": \"Hub-and-spoke with route tables and attachments\",\n        \"azure_virtual_wan\": \"Any-to-any connectivity with intelligent routing\"\n      },\n      \"scaling_capabilities\": {\n        \"aws_transit_gateway\": \"Up to 5,000 VPC attachments per gateway\",\n        \"azure_virtual_wan\": \"Unlimited VNet connections with global scale\"\n      },\n      \"routing_intelligence\": {\n        \"aws_transit_gateway\": \"Static route tables with manual propagation\",\n        \"azure_virtual_wan\": \"Dynamic routing with Microsoft global network optimization\"\n      },\n      \"security_integration\": {\n        \"aws_transit_gateway\": \"Requires separate security appliances\",\n        \"azure_virtual_wan\": \"Integrated Azure Firewall and security partner solutions\"\n      }\n    },\n    \"global_connectivity_comparison\": {\n      \"aws_global_accelerator\": \"Anycast IP with AWS global network\",\n      \"azure_front_door\": \"Global HTTP/HTTPS load balancer with CDN and WAF\",\n      \"aws_cloudfront\": \"Global CDN with edge locations\",\n      \"azure_traffic_manager\": \"DNS-based global load balancing\"\n    },\n    \"hybrid_connectivity\": {\n      \"aws_direct_connect\": \"Dedicated network connection to AWS\",\n      \"azure_expressroute\": \"Private connection to Azure with higher SLAs and more peering options\"\n    }\n  },\n  \"network_optimization_strategies\": {\n    \"performance_optimization\": {\n      \"routing_optimization\": \"Leverage Azure's global network for optimal path selection\",\n      \"proximity_placement\": \"Use proximity placement groups for latency-sensitive workloads\",\n      \"accelerated_networking\": \"Enable SR-IOV for improved network performance\",\n      \"bandwidth_scaling\": \"Dynamic bandwidth allocation based on traffic patterns\"\n    },\n    \"cost_optimization\": {\n      \"data_transfer_optimization\": \"Minimize cross-region data transfer costs\",\n      \"reserved_capacity\": \"Use reserved capacity for predictable bandwidth needs\",\n      \"traffic_engineering\": \"Optimize routing to reduce costs while maintaining performance\",\n      \"right_sizing\": \"Match network capacity to actual requirements\"\n    },\n    \"security_optimization\": {\n      \"zero_trust_networking\": \"Implement zero trust principles with micro-segmentation\",\n      \"threat_intelligence\": \"Leverage Azure threat intelligence for proactive security\",\n      \"automated_response\": \"Automated threat response and remediation\",\n      \"compliance_frameworks\": \"Built-in compliance for various regulatory requirements\"\n    }\n  },\n  \"cleanup\": {\n    \"instructions\": \"Remove networking resources in proper dependency order\",\n    \"commands\": [\n      \"# Delete Connection Monitor and test VM\",\n      \"az vm delete --resource-group global-networking-rg --name vm-connection-test --yes\",\n      \"# Delete Front Door profile\",\n      \"az network front-door delete --resource-group global-networking-rg --name $FRONT_DOOR_NAME\",\n      \"# Delete Traffic Manager profile\",\n      \"az network traffic-manager profile delete --resource-group global-networking-rg --name $TRAFFIC_MANAGER_NAME\",\n      \"# Delete monitoring alerts\",\n      \"az monitor metrics alert delete --resource-group global-networking-rg --name VirtualWAN-High-Latency\",\n      \"az monitor metrics alert delete --resource-group global-networking-rg --name Firewall-Threat-Detection\",\n      \"az monitor metrics alert delete --resource-group global-networking-rg --name TrafficManager-Endpoint-Down\",\n      \"# Delete Azure Firewalls\",\n      \"az network firewall delete --resource-group global-networking-rg --name fw-eastus-hub\",\n      \"az network firewall delete --resource-group global-networking-rg --name fw-westus2-hub\",\n      \"# Delete Firewall Policy\",\n      \"az network firewall policy delete --resource-group global-networking-rg --name $FW_POLICY_NAME\",\n      \"# Delete VNet connections\",\n      \"az network vhub connection delete --resource-group global-networking-rg --vhub-name vhub-eastus --name connection-eastus-production --yes\",\n      \"az network vhub connection delete --resource-group global-networking-rg --vhub-name vhub-eastus --name connection-eastus-dmz --yes\",\n      \"az network vhub connection delete --resource-group global-networking-rg --vhub-name vhub-westus2 --name connection-westus2-development --yes\",\n      \"az network vhub connection delete --resource-group global-networking-rg --vhub-name vhub-westeurope --name connection-westeurope-shared --yes\",\n      \"# Delete ExpressRoute Gateways\",\n      \"az network express-route gateway delete --resource-group global-networking-rg --name ergw-eastus\",\n      \"az network express-route gateway delete --resource-group global-networking-rg --name ergw-westus2\",\n      \"# Delete VPN Gateways\",\n      \"az network vpn-gateway delete --resource-group global-networking-rg --name vpng-eastus\",\n      \"az network vpn-gateway delete --resource-group global-networking-rg --name vpng-westus2\",\n      \"az network vpn-gateway delete --resource-group global-networking-rg --name vpng-westeurope\",\n      \"# Delete Virtual Hubs (this may take 30+ minutes)\",\n      \"az network vhub delete --resource-group global-networking-rg --name vhub-eastus --no-wait\",\n      \"az network vhub delete --resource-group global-networking-rg --name vhub-westus2 --no-wait\",\n      \"az network vhub delete --resource-group global-networking-rg --name vhub-westeurope --no-wait\",\n      \"# Delete Virtual WAN\",\n      \"az network vwan delete --resource-group global-networking-rg --name $VWAN_NAME\",\n      \"# Delete VNets\",\n      \"az network vnet delete --resource-group global-networking-rg --name vnet-eastus-production\",\n      \"az network vnet delete --resource-group global-networking-rg --name vnet-westus2-development\",\n      \"az network vnet delete --resource-group global-networking-rg --name vnet-westeurope-shared\",\n      \"az network vnet delete --resource-group global-networking-rg --name vnet-eastus-dmz\",\n      \"# Delete DNS zone\",\n      \"az network dns zone delete --resource-group global-networking-rg --name $DNS_ZONE_NAME --yes\",\n      \"# Delete public IP addresses\",\n      \"az network public-ip delete --resource-group global-networking-rg --name pip-app-eastus\",\n      \"az network public-ip delete --resource-group global-networking-rg --name pip-app-westus2\",\n      \"az network public-ip delete --resource-group global-networking-rg --name pip-app-westeurope\",\n      \"# Delete storage accounts\",\n      \"az storage account delete --resource-group global-networking-rg --name $NETMON_STORAGE_NAME --yes\",\n      \"# Delete Log Analytics workspace\",\n      \"az monitor log-analytics workspace delete --resource-group global-networking-rg --workspace-name network-monitoring-workspace --yes\",\n      \"# Delete resource group\",\n      \"az group delete --name global-networking-rg --yes --no-wait\"\n    ]\n  },\n  \"key_takeaways\": [\n    \"Azure Virtual WAN provides superior any-to-any connectivity compared to AWS Transit Gateway\",\n    \"Integrated security with Azure Firewall offers better protection than separate AWS security appliances\",\n    \"Azure's global network provides better performance optimization than AWS global infrastructure\",\n    \"Front Door + Traffic Manager combination offers more sophisticated global load balancing than AWS solutions\",\n    \"ExpressRoute provides more flexible peering options and higher SLAs than AWS Direct Connect\",\n    \"Azure network monitoring provides deeper insights with integrated Log Analytics and Connection Monitor\",\n    \"Cost optimization opportunities are more granular and immediate in Azure networking services\"\n  ],\n  \"next_steps\": [\n    \"Learn Azure Network Security Groups and Application Security Groups for micro-segmentation\",\n    \"Explore Azure Private Link for secure service connectivity patterns\",\n    \"Study Azure Load Balancer and Application Gateway advanced configurations\",\n    \"Practice with Azure Bastion for secure remote access scenarios\",\n    \"Learn Azure Arc networking for hybrid and multi-cloud scenarios\"\n  ]\n}"
        }\n      }\n    }\n  ]\n}"