{
  "lab_metadata": {
    "id": "hybrid-cloud-connectivity-lab",
    "title": "AWS Hybrid Cloud to Azure ExpressRoute: Enterprise Hybrid Connectivity and Network Integration",
    "category": "networking",
    "difficulty": "advanced",
    "estimated_time": "180 minutes",
    "description": "Master enterprise hybrid cloud connectivity by migrating from AWS Direct Connect and VPN solutions to Azure ExpressRoute and VPN Gateway with advanced networking patterns",
    "aws_services": ["Direct Connect", "VPN Gateway", "Client VPN", "Transit Gateway", "Route 53 Resolver"],
    "azure_services": ["ExpressRoute", "VPN Gateway", "Point-to-Site VPN", "Virtual WAN", "Private DNS Resolver"],
    "tags": ["networking", "hybrid-cloud", "connectivity", "enterprise", "saa-c03-critical", "sap-c02"],
    "prerequisites": [
      "Completion of networking-fundamentals-lab",
      "Understanding of routing protocols (BGP, OSPF)",
      "Knowledge of enterprise network architecture",
      "Familiarity with VPN technologies and IPSec",
      "Basic understanding of DNS resolution and private connectivity"
    ],
    "learning_objectives": [
      "Migrate AWS Direct Connect to Azure ExpressRoute for dedicated connectivity",
      "Transform AWS VPN Gateway site-to-site connections to Azure VPN Gateway",
      "Convert AWS Client VPN to Azure Point-to-Site VPN",
      "Implement Azure Virtual WAN for global network connectivity",
      "Configure hybrid DNS resolution and private connectivity",
      "Set up redundant connectivity with failover capabilities",
      "Implement network monitoring and performance optimization"
    ]
  },
  "scenario": {
    "title": "Global Enterprise Hybrid Cloud Migration",
    "description": "MegaCorp operates a global enterprise with headquarters in New York, regional offices in London and Tokyo, and manufacturing facilities worldwide. They need to migrate their AWS hybrid connectivity to Azure while maintaining seamless connectivity to on-premises infrastructure and ensuring 99.99% uptime.",
    "business_requirements": [
      "Zero downtime during connectivity migration",
      "Sub-10ms latency for critical applications",
      "99.99% connectivity uptime with redundant paths",
      "Secure private connectivity to Azure services",
      "Global network optimization and traffic engineering",
      "Compliance with financial industry regulations",
      "Cost optimization through intelligent routing"
    ],
    "current_aws_architecture": [
      "Direct Connect connections from 3 global locations (1Gbps each)",
      "VPN Gateway for branch office connectivity",
      "Client VPN for remote user access",
      "Transit Gateway for centralized routing",
      "Route 53 Resolver for hybrid DNS",
      "CloudWatch for network monitoring",
      "Multiple VPCs across different regions"
    ],
    "target_azure_architecture": [
      "ExpressRoute circuits from 3 global locations with peering",
      "VPN Gateway for site-to-site branch connectivity",
      "Point-to-Site VPN for remote user access",
      "Virtual WAN for global network orchestration",
      "Private DNS Resolver for hybrid name resolution",
      "Network Watcher for comprehensive monitoring",
      "Hub-spoke virtual network architecture"
    ]
  },
  "lab_sections": [
    {
      "section": 1,
      "title": "ExpressRoute Setup: AWS Direct Connect to Azure ExpressRoute Migration",
      "estimated_time": "60 minutes",
      "description": "Establish dedicated private connectivity between on-premises and Azure",
      "aws_context": {
        "service": "AWS Direct Connect",
        "description": "Dedicated network connection from on-premises to AWS",
        "key_features": [
          "Dedicated bandwidth options (50Mbps to 100Gbps)",
          "Virtual interfaces (VIFs) for traffic separation",
          "BGP routing with redundancy",
          "Consistent network performance",
          "Private connectivity to AWS services"
        ]
      },
      "azure_equivalent": {
        "service": "Azure ExpressRoute",
        "description": "Private connection between on-premises infrastructure and Azure",
        "key_features": [
          "Dedicated circuits from 50Mbps to 100Gbps",
          "Private and Microsoft peering options",
          "BGP routing with redundancy support",
          "Global connectivity through ExpressRoute Global Reach",
          "Built-in redundancy and high availability"
        ]
      },
      "hands_on_exercises": [
        {
          "exercise": 1,
          "title": "Create ExpressRoute Circuit and Configure Peering",
          "steps": [
            {
              "step": 1,
              "description": "Create ExpressRoute circuit with carrier partner",
              "aws_context": "Similar to ordering Direct Connect connection through AWS console",
              "azure_command": "az network express-route create --name megacorp-expressroute --resource-group rg-networking --bandwidth 1000 --peering-location 'New York' --service-provider 'Equinix' --sku-family MeteredData --sku-tier Standard",
              "explanation": "Creates 1Gbps ExpressRoute circuit with Equinix in New York location"
            },
            {
              "step": 2,
              "description": "Configure private peering for Azure services access",
              "aws_context": "Equivalent to creating private VIF in Direct Connect",
              "azure_cli_commands": [
                "az network express-route peering create --circuit-name megacorp-expressroute --resource-group rg-networking --peering-type AzurePrivatePeering --peer-asn 65001 --primary-peer-subnet 192.168.1.0/30 --secondary-peer-subnet 192.168.1.4/30 --vlan-id 100",
                "az network express-route peering update --circuit-name megacorp-expressroute --resource-group rg-networking --name AzurePrivatePeering --advertised-public-prefixes 10.0.0.0/8"
              ],
              "explanation": "Configures BGP peering for private Azure resource access"
            },
            {
              "step": 3,
              "description": "Create ExpressRoute gateway and connect to virtual network",
              "aws_context": "Similar to attaching VGW to VPC in AWS",
              "expressroute_gateway": {
                "gateway_creation": "az network vnet-gateway create --name megacorp-er-gateway --resource-group rg-networking --vnet hub-vnet --gateway-type ExpressRoute --sku HighPerformance --location eastus",
                "circuit_connection": "az network vpn-connection create --name megacorp-er-connection --resource-group rg-networking --vnet-gateway1 megacorp-er-gateway --express-route-circuit2 megacorp-expressroute --location eastus"
              },
              "explanation": "Creates high-performance ExpressRoute gateway for dedicated connectivity"
            },
            {
              "step": 4,
              "description": "Configure redundant ExpressRoute for high availability",
              "aws_context": "Similar to setting up redundant Direct Connect connections",
              "redundancy_setup": {
                "secondary_circuit": "az network express-route create --name megacorp-expressroute-backup --resource-group rg-networking --bandwidth 1000 --peering-location 'Washington DC' --service-provider 'Verizon' --sku-family MeteredData --sku-tier Standard",
                "load_balancing": "Configure equal-cost multipath (ECMP) routing for load distribution",
                "failover_testing": "Test failover scenarios and recovery procedures"
              },
              "explanation": "Implements dual ExpressRoute circuits for 99.99% uptime"
            }
          ],
          "validation": [
            "Verify ExpressRoute circuit is provisioned and active",
            "Confirm BGP peering is established with correct routes",
            "Test connectivity to Azure resources through private peering",
            "Validate redundancy and failover capabilities"
          ]
        }
      ]
    },
    {
      "section": 2,
      "title": "Site-to-Site VPN: AWS VPN Gateway to Azure VPN Gateway Migration",
      "estimated_time": "45 minutes",
      "description": "Migrate branch office connectivity from AWS VPN to Azure VPN Gateway",
      "aws_context": {
        "service": "AWS VPN Gateway",
        "description": "IPSec VPN connections between AWS and remote networks",
        "key_features": [
          "Site-to-site IPSec VPN tunnels",
          "BGP and static routing support",
          "Redundant VPN tunnels for high availability",
          "Integration with Transit Gateway",
          "Accelerated VPN for improved performance"
        ]
      },
      "azure_equivalent": {
        "service": "Azure VPN Gateway",
        "description": "Cross-premises connectivity using IPSec/IKE VPN tunnels",
        "key_features": [
          "Site-to-site and point-to-site VPN support",
          "Active-active and active-passive configurations",
          "BGP routing support for dynamic routing",
          "Zone-redundant deployments",
          "VPN Gateway SKUs for different performance needs"
        ]
      },
      "hands_on_exercises": [
        {
          "exercise": 1,
          "title": "Deploy Azure VPN Gateway with Site-to-Site Connectivity",
          "steps": [
            {
              "step": 1,
              "description": "Create VPN Gateway with appropriate SKU",
              "aws_context": "Similar to creating VGW in AWS with high performance",
              "azure_command": "az network vnet-gateway create --name megacorp-vpn-gateway --resource-group rg-networking --vnet hub-vnet --gateway-type Vpn --vpn-type RouteBased --sku VpnGw2 --no-wait",
              "explanation": "Creates route-based VPN gateway with 1.25Gbps throughput capability"
            },
            {
              "step": 2,
              "description": "Configure local network gateway for branch office",
              "aws_context": "Equivalent to customer gateway configuration in AWS",
              "branch_offices": [
                {
                  "name": "london-branch",
                  "public_ip": "203.0.113.10",
                  "address_prefixes": ["192.168.10.0/24", "192.168.11.0/24"],
                  "azure_command": "az network local-gateway create --name london-branch-lgw --resource-group rg-networking --gateway-ip-address 203.0.113.10 --local-address-prefixes 192.168.10.0/24 192.168.11.0/24"
                },
                {
                  "name": "tokyo-branch",
                  "public_ip": "203.0.113.20",
                  "address_prefixes": ["192.168.20.0/24", "192.168.21.0/24"],
                  "azure_command": "az network local-gateway create --name tokyo-branch-lgw --resource-group rg-networking --gateway-ip-address 203.0.113.20 --local-address-prefixes 192.168.20.0/24 192.168.21.0/24"
                }
              ],
              "explanation": "Defines branch office network configurations for VPN connections"
            },
            {
              "step": 3,
              "description": "Create site-to-site VPN connections with BGP",
              "aws_context": "Similar to creating VPN connections with BGP in AWS",
              "vpn_connections": {
                "london_connection": {
                  "azure_command": "az network vpn-connection create --name london-s2s-connection --resource-group rg-networking --vnet-gateway1 megacorp-vpn-gateway --local-gateway2 london-branch-lgw --shared-key 'MegaCorp-London-2024!' --enable-bgp",
                  "bgp_config": {
                    "peer_asn": "65002",
                    "peer_ip": "192.168.10.1",
                    "azure_asn": "65515"
                  }
                },
                "tokyo_connection": {
                  "azure_command": "az network vpn-connection create --name tokyo-s2s-connection --resource-group rg-networking --vnet-gateway1 megacorp-vpn-gateway --local-gateway2 tokyo-branch-lgw --shared-key 'MegaCorp-Tokyo-2024!' --enable-bgp",
                  "bgp_config": {
                    "peer_asn": "65003",
                    "peer_ip": "192.168.20.1",
                    "azure_asn": "65515"
                  }
                }
              },
              "explanation": "Establishes encrypted VPN tunnels with dynamic BGP routing"
            }
          ],
          "validation": [
            "Verify VPN Gateway deployment and operational status",
            "Confirm site-to-site VPN connections are established",
            "Test BGP route advertisement and learning",
            "Validate end-to-end connectivity through VPN tunnels"
          ]
        }
      ]
    },
    {
      "section": 3,
      "title": "Point-to-Site VPN: AWS Client VPN to Azure P2S VPN Migration",
      "estimated_time": "40 minutes",
      "description": "Migrate remote user access from AWS Client VPN to Azure Point-to-Site VPN",
      "aws_context": {
        "service": "AWS Client VPN",
        "description": "Managed VPN service for secure remote access to AWS resources",
        "key_features": [
          "Certificate-based and Active Directory authentication",
          "Split tunneling support",
          "Connection logging and monitoring",
          "Integration with AWS Directory Service",
          "Scalable to thousands of concurrent users"
        ]
      },
      "azure_equivalent": {
        "service": "Azure Point-to-Site VPN",
        "description": "Individual client connections to Azure virtual network",
        "key_features": [
          "Certificate authentication and Azure AD integration",
          "OpenVPN and IKEv2 protocol support",
          "Dynamic IP pool allocation",
          "Conditional access integration",
          "Per-user connection monitoring"
        ]
      },
      "hands_on_exercises": [
        {
          "exercise": 1,
          "title": "Configure Point-to-Site VPN with Certificate Authentication",
          "steps": [
            {
              "step": 1,
              "description": "Generate root and client certificates for authentication",
              "aws_context": "Similar to creating certificates for AWS Client VPN",
              "certificate_generation": {
                "root_cert": "Generate self-signed root certificate for CA",
                "client_cert": "Generate client certificates signed by root CA",
                "powershell_commands": [
                  "$cert = New-SelfSignedCertificate -Type Custom -KeySpec Signature -Subject 'CN=MegaCorpRootCA' -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation 'Cert:\\CurrentUser\\My' -KeyUsageProperty Sign -KeyUsage CertSign",
                  "$clientCert = New-SelfSignedCertificate -Type Custom -DnsName P2SChildCert -KeySpec Signature -Subject 'CN=MegaCorpClientCert' -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation 'Cert:\\CurrentUser\\My' -Signer $cert -TextExtension @('2.5.29.37={text}1.3.6.1.5.5.7.3.2')"
                ]
              },
              "explanation": "Creates certificate hierarchy for secure P2S authentication"
            },
            {
              "step": 2,
              "description": "Configure Point-to-Site VPN on existing VPN Gateway",
              "aws_context": "Equivalent to configuring client VPN endpoint in AWS",
              "p2s_configuration": {
                "address_pool": "172.16.0.0/24",
                "tunnel_type": "OpenVPN",
                "authentication_type": "Certificate",
                "azure_commands": [
                  "az network vnet-gateway update --name megacorp-vpn-gateway --resource-group rg-networking --client-protocol OpenVPN --address-prefixes 172.16.0.0/24",
                  "az network vnet-gateway root-cert create --gateway-name megacorp-vpn-gateway --resource-group rg-networking --name MegaCorpRootCA --public-cert-data {base64-encoded-cert-data}"
                ]
              },
              "explanation": "Configures VPN gateway for point-to-site client connections"
            },
            {
              "step": 3,
              "description": "Deploy VPN client configuration to remote users",
              "aws_context": "Similar to distributing AWS VPN Client configuration",
              "client_deployment": {
                "config_download": "Download P2S VPN client configuration from Azure portal",
                "installation_steps": [
                  "Install OpenVPN client on user devices",
                  "Import client certificate to certificate store",
                  "Import VPN configuration profile",
                  "Test connection and validate connectivity"
                ],
                "group_policy": "Deploy configuration through Active Directory Group Policy"
              },
              "explanation": "Enables secure remote access for distributed workforce"
            }
          ],
          "validation": [
            "Verify P2S VPN configuration is active on gateway",
            "Confirm client certificates are properly configured",
            "Test successful P2S VPN connection from remote client",
            "Validate access to Azure resources through P2S tunnel"
          ]
        }
      ]
    },
    {
      "section": 4,
      "title": "Virtual WAN Implementation: Global Network Orchestration",
      "estimated_time": "35 minutes",
      "description": "Implement Azure Virtual WAN for global network connectivity and optimization",
      "azure_service": {
        "service": "Azure Virtual WAN",
        "description": "Networking service for optimized and automated branch connectivity",
        "key_features": [
          "Global transit network architecture",
          "Branch connectivity through SD-WAN partners",
          "Hub-to-hub connectivity",
          "Integrated security services",
          "Any-to-any connectivity model"
        ]
      },
      "hands_on_exercises": [
        {
          "exercise": 1,
          "title": "Deploy Virtual WAN with Global Hubs",
          "steps": [
            {
              "step": 1,
              "description": "Create Virtual WAN and regional hubs",
              "azure_commands": [
                "az network vwan create --name megacorp-vwan --resource-group rg-networking --location eastus --type Standard",
                "az network vhub create --name eastus-hub --resource-group rg-networking --vwan megacorp-vwan --address-prefix 10.100.0.0/24 --location eastus",
                "az network vhub create --name westeurope-hub --resource-group rg-networking --vwan megacorp-vwan --address-prefix 10.101.0.0/24 --location westeurope"
              ],
              "explanation": "Creates global Virtual WAN with regional hubs for optimized connectivity"
            },
            {
              "step": 2,
              "description": "Connect virtual networks to Virtual WAN hubs",
              "vnet_connections": [
                {
                  "hub": "eastus-hub",
                  "vnet": "hub-vnet-eastus",
                  "command": "az network vhub connection create --name hub-vnet-connection --resource-group rg-networking --vhub-name eastus-hub --remote-vnet hub-vnet-eastus"
                },
                {
                  "hub": "westeurope-hub", 
                  "vnet": "hub-vnet-westeurope",
                  "command": "az network vhub connection create --name hub-vnet-connection-eu --resource-group rg-networking --vhub-name westeurope-hub --remote-vnet hub-vnet-westeurope"
                }
              ],
              "explanation": "Connects regional virtual networks to Virtual WAN for global connectivity"
            },
            {
              "step": 3,
              "description": "Configure routing policies and traffic optimization",
              "routing_configuration": {
                "default_route_table": "Configure default routing for hub-to-hub connectivity",
                "custom_route_tables": "Create custom route tables for security segmentation",
                "propagation_labels": "Use labels for dynamic route propagation",
                "traffic_engineering": "Implement traffic engineering for cost optimization"
              },
              "explanation": "Optimizes global traffic routing and implements network segmentation"
            }
          ],
          "validation": [
            "Verify Virtual WAN hubs are deployed and operational",
            "Confirm virtual network connections are established",
            "Test any-to-any connectivity through Virtual WAN",
            "Validate routing policies and traffic optimization"
          ]
        }
      ]
    }
  ],
  "performance_optimization": [
    {
      "optimization": "ExpressRoute Performance",
      "aws_equivalent": "Direct Connect bandwidth optimization",
      "azure_implementation": "ExpressRoute FastPath and Global Reach",
      "benefits": [
        "Bypass ExpressRoute gateway for better performance",
        "Direct connectivity between ExpressRoute circuits",
        "Reduced latency for high-bandwidth workloads"
      ],
      "configuration": "Enable FastPath on ExpressRoute connections and configure Global Reach"
    },
    {
      "optimization": "VPN Performance Tuning",
      "aws_equivalent": "Accelerated VPN and optimized routing",
      "azure_implementation": "VPN Gateway performance SKUs and BGP optimization",
      "benefits": [
        "Higher throughput with VpnGw3-5 SKUs",
        "Optimized BGP convergence times",
        "Active-active configuration for load balancing"
      ],
      "configuration": "Use appropriate VPN Gateway SKU and configure active-active mode"
    },
    {
      "optimization": "Global Network Optimization",
      "aws_equivalent": "Transit Gateway route optimization",
      "azure_implementation": "Virtual WAN hub-to-hub optimization",
      "benefits": [
        "Automatic route optimization between hubs",
        "Reduced latency through regional hubs",
        "Cost optimization through traffic engineering"
      ],
      "configuration": "Implement Virtual WAN with regional hubs and custom routing"
    }
  ],
  "cost_optimization": [
    {
      "area": "ExpressRoute Pricing",
      "aws_comparison": "Direct Connect port hours plus data transfer",
      "azure_model": "ExpressRoute circuit plus outbound data transfer",
      "optimization_strategies": [
        "Right-size ExpressRoute bandwidth based on utilization",
        "Use ExpressRoute Local for regional traffic",
        "Implement ExpressRoute Premium only when global reach needed",
        "Monitor usage patterns and adjust circuit size"
      ],
      "estimated_savings": "20-30% through proper capacity planning"
    },
    {
      "area": "VPN Gateway Costs",
      "aws_comparison": "VPN connection charges plus data transfer",
      "azure_model": "VPN Gateway hourly charges plus outbound data",
      "optimization_strategies": [
        "Choose appropriate VPN Gateway SKU based on throughput needs",
        "Use Basic SKU for development and testing environments",
        "Consolidate multiple site connections through single gateway",
        "Schedule non-critical connections during off-peak hours"
      ],
      "estimated_savings": "40-60% for dev/test environments with Basic SKU"
    },
    {
      "area": "Virtual WAN Optimization",
      "aws_comparison": "Transit Gateway hourly and data processing charges",
      "azure_model": "Virtual WAN hub hours plus VPN/ExpressRoute scale units",
      "optimization_strategies": [
        "Deploy hubs only in required regions",
        "Monitor scale unit usage and optimize accordingly",
        "Use Virtual WAN for centralized connectivity when multiple sites",
        "Evaluate hub-to-hub data transfer costs"
      ],
      "estimated_savings": "25-35% for multi-region deployments"
    }
  ],
  "security_best_practices": [
    {
      "category": "Network Security",
      "practices": [
        "Implement network security groups for traffic filtering",
        "Use Azure Firewall in Virtual WAN hubs for centralized security",
        "Enable DDoS Protection Standard for public endpoints",
        "Configure custom route tables for traffic inspection"
      ]
    },
    {
      "category": "Authentication & Access Control",
      "practices": [
        "Use certificate-based authentication for VPN connections",
        "Implement Azure AD integration for P2S VPN",
        "Enable multi-factor authentication for remote access",
        "Use conditional access policies for device compliance"
      ]
    },
    {
      "category": "Monitoring & Compliance",
      "practices": [
        "Enable Network Watcher for comprehensive monitoring",
        "Configure VPN Gateway diagnostic logs",
        "Implement connection monitoring and alerting",
        "Use Azure Policy for network compliance enforcement"
      ]
    }
  ],
  "troubleshooting_guide": [
    {
      "issue": "ExpressRoute Connectivity Problems",
      "symptoms": [
        "BGP peering down or route advertisement issues",
        "High latency or packet loss over ExpressRoute",
        "Intermittent connectivity to Azure resources"
      ],
      "solutions": [
        "Verify ExpressRoute circuit provisioning status",
        "Check BGP configuration and route advertisements",
        "Monitor ExpressRoute gateway metrics and health",
        "Contact carrier partner for physical layer issues",
        "Use ExpressRoute troubleshooting tools in Azure portal"
      ]
    },
    {
      "issue": "VPN Connection Failures",
      "symptoms": [
        "Site-to-site VPN tunnels failing to establish",
        "Authentication errors with P2S VPN clients",
        "Slow VPN performance or high latency"
      ],
      "solutions": [
        "Verify VPN Gateway status and configuration",
        "Check IPSec parameters and shared key configuration",
        "Validate client certificates and authentication methods",
        "Monitor VPN Gateway metrics and diagnostic logs",
        "Test connectivity using VPN troubleshooting tools"
      ]
    },
    {
      "issue": "Virtual WAN Routing Issues",
      "symptoms": [
        "Connectivity failures between Virtual WAN hubs",
        "Unexpected routing behavior or traffic paths",
        "Performance issues with hub-to-hub communication"
      ],
      "solutions": [
        "Review Virtual WAN routing configuration and policies",
        "Check hub status and effective routes",
        "Validate virtual network connections to hubs",
        "Monitor Virtual WAN metrics and connection health",
        "Use Network Watcher for path analysis and diagnostics"
      ]
    }
  ],
  "migration_checklist": [
    {
      "phase": "Assessment and Planning",
      "tasks": [
        "Document current AWS Direct Connect and VPN configurations",
        "Assess bandwidth requirements and traffic patterns", 
        "Plan ExpressRoute circuit locations and carrier partnerships",
        "Design Azure network architecture with redundancy",
        "Identify security and compliance requirements"
      ]
    },
    {
      "phase": "Azure Infrastructure Deployment",
      "tasks": [
        "Order ExpressRoute circuits from carrier partners",
        "Create Virtual WAN and regional hubs (if applicable)",
        "Deploy VPN Gateways with appropriate SKUs",
        "Configure network security groups and routing",
        "Set up monitoring and diagnostic logging"
      ]
    },
    {
      "phase": "Connectivity Migration",
      "tasks": [
        "Configure ExpressRoute peering and gateway connections",
        "Migrate site-to-site VPN connections with testing",
        "Deploy P2S VPN configuration to remote users",
        "Update DNS and routing configurations",
        "Test failover scenarios and redundancy"
      ]
    },
    {
      "phase": "Validation and Optimization",
      "tasks": [
        "Verify end-to-end connectivity across all sites",
        "Validate performance and latency requirements",
        "Test disaster recovery and failover procedures",
        "Optimize routing and traffic engineering",
        "Update operational procedures and documentation"
      ]
    }
  ],
  "learning_resources": [
    {
      "type": "Official Documentation",
      "links": [
        "Azure ExpressRoute documentation - https://docs.microsoft.com/en-us/azure/expressroute/",
        "Azure VPN Gateway documentation - https://docs.microsoft.com/en-us/azure/vpn-gateway/",
        "Virtual WAN documentation - https://docs.microsoft.com/en-us/azure/virtual-wan/"
      ]
    },
    {
      "type": "Migration Guides",
      "links": [
        "AWS to Azure networking services comparison",
        "Direct Connect to ExpressRoute migration guide", 
        "Hybrid connectivity best practices",
        "Network security migration patterns"
      ]
    },
    {
      "type": "Hands-on Tutorials",
      "links": [
        "ExpressRoute configuration quickstarts",
        "VPN Gateway deployment guides",
        "Virtual WAN implementation tutorials",
        "Hybrid DNS configuration samples"
      ]
    }
  ],
  "next_steps": [
    "Implement Azure Private Link for service-specific connectivity",
    "Deploy Azure Firewall for centralized network security",
    "Set up Azure Front Door for global load balancing",
    "Configure Azure Traffic Manager for DNS-based routing",
    "Implement Network Watcher for advanced monitoring",
    "Explore Azure Arc for hybrid infrastructure management"
  ]
}